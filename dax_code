--Day 1: Which product/s has been ordered the most (in terms of quantity)?

D1 = 
VAR order_quantities_by_product = SUMMARIZE(Order_Details, Products[ProductName], "sum quantity", SUM(Order_Details[Quantity])) --summarizes the total quantity ordered for each product

VAR top_selling_product = TOPN(1, order_quantities_by_product, [sum quantity]) --selects the top-selling product based on the total quantity

RETURN 
CALCULATE(SELECTEDVALUE(Products[ProductName]), top_selling_product) --selects the name of the top-selling product


--Day 2: Which product/s have the highest average order size?

D2 = 
--summarize the data to calculate the average order size for each product
VAR avg_order_size_per_product = SUMMARIZE(
			Products,
			Products[ProductID],
			Products[ProductName],
			"avg_order_size", AVERAGE(Order_Details[Quantity])
		) 

--get the top product with the highest average order size
VAR top_product = TOPN(1, avg_order_size_per_product, [avg_order_size], DESC)

RETURN
--concatenate and return the product names from the top products
CONCATENATEX (top_product, Products[ProductName], ", ", Products[ProductName], ASC)

--Day 3: What is the highest average discount done to a product?
D3 = 
--create a table with average discount per product
VAR avg_discount_per_product = SUMMARIZE( Products, Products[ProductID], Products[ProductName], "avg_discount", AVERAGE(Order_Details[Discount]))

--select the product with the highest average discount
VAR top_discount = TOPN(1, avg_discount_per_product, [avg_discount], DESC)

RETURN 
SELECTCOLUMNS(top_discount, "avg", 
    FORMAT([avg_discount], "0%") --format the average discount as a percentage
    )


--Day 4: Top 3 categories that have the highest revenue contribution

D4 = CONCATENATEX ( --concatenates the values from the table returned by TOPN
		TOPN( --selects the top 3 rows based on a given sorting order
			3,
			SUMMARIZE( --summarizes the Categories table by CategoryID and CategoryName
				Categories,
				Categories[CategoryID],
				Categories[CategoryName],
				"total_sales", SUMX(
					Order_Details,
					Order_Details[UnitPrice] * Order_Details[Quantity] * (1 - Order_Details[Discount])
				)
			),
			[total_sales], DESC
		),  
		Categories[CategoryName] , ", ", [total_sales], DESC
	)

--Day 5: Average price of discontinued products

D5 = SUMMARIZE(
	FILTER(Products, Products[Discontinued] = true),
	"avg_price",
	AVERAGE(Products[UnitPrice]))


D05 model = 
AVERAGEX(
    SUMMARIZE(
	    FILTER(Products, Products[Discontinued] = true), 
        Products[ProductID],
	    "avg_price",
	    AVERAGE(Order_Details[UnitPrice])
    ), 
    [avg_price]
)

--Day 6: Percentage of sales from discontinued products

D06 = 
VAR products_total_price = 
    SUMMARIZE(
		Products,
		Products[ProductID],
		Products[Discontinued],
		"total_price", SUMX(
			Order_Details,
			Order_Details[Quantity] * Order_Details[UnitPrice] * (1 - Order_Details[Discount])
		))

RETURN
	FORMAT(
		DIVIDE( 
			SUMX(
				FILTER(products_total_price, Products[Discontinued] = true), 
				[total_price]
			), 
			SUMX(products_total_price, [total_price])
		), 
	"0%")

D06 modal = 
FORMAT(
    DIVIDE(
        SUMX(
            FILTER(Products, Products[Discontinued] = true),
            [Total sales after discount]
        ),
        [Total sales after discount]
    ),
    "0%"
)

--Day 7: How many high-value orders were placed n 1997?

D07 = 
VAR order_table_97 =
FILTER(
    SUMMARIZE(	
			Order_Details,
			Order_Details[OrderID],
			'Calendar'[Year],
			"total_sale",
			SUM(Order_Details[TotalPriceAfterDiscount])
		),
        'Calendar'[Year] = 1997)

VAR avg_order_sale =
DIVIDE(
	SUM(Order_Details[TotalPriceAfterDiscount]),
	DISTINCTCOUNT(Orders[OrderID])
)

RETURN 
COUNTROWS(
	FILTER(
		order_table_97,[total_sale] > avg_order_sale)
	)


D07 model = 
VAR order_table_97 =
FILTER(
    SUMMARIZE(
        Orders, 
        Orders[OrderID], 'Calendar'[Year], 
        "revenue", [Total sales after discount]
    ),
    'Calendar'[Year] = 1997)

VAR avg_order_revenue_97 =
AVERAGEX(order_table_97, [revenue])

RETURN
COUNTROWS(
    FILTER(order_table_97, [revenue] > avg_order_revenue_97)
)



--Day 8: Number of orders delivered on time

D08 = 
COUNTROWS(
	FILTER(Orders, Orders[RequiredDate] - Orders[ShippedDate] >= 0)
)

--dwa

D08 modal = 
COUNTROWS(
    FILTER(
        SUMMARIZE(
            FILTER(
			    Orders, 
			    NOT(
			    	ISBLANK(Orders[ShippedDate])
			    )
		    ),
            Orders[OrderID],
            Orders[ShippedDate],
            Orders[RequiredDate],
            "on time",
            DATEDIFF(Orders[ShippedDate], Orders[RequiredDate], DAY)
        ),
        [on time] = 0
    )
)

--Day 9: Single month with highest sales

D09 = 
CALCULATE(
    SELECTEDVALUE('Calendar'[Month Name]),
    TOPN(
        1, 
        SUMMARIZE(
            Orders, 
            'Calendar'[Year], 'Calendar'[Month Name], 
            "total_sales", SUM(Order_Details[TotalPriceAfterDiscount])
        ), 
        [total_sales], DESC
    )
)


--Day 10: Bast sales day for queso cabrales

D10 = 
CALCULATE(
    SELECTEDVALUE('Calendar'[Day Name]),
    TOPN(
	    1, 
	    FILTER(
		    SUMMARIZE(
			    Order_Details, Products[ProductName], 'Calendar'[Day Name], 
			    "total_sale", SUM(Order_Details[TotalPriceAfterDiscount])
		    ), 
		    Products[ProductName] = "Queso Cabrales"
	    ), 
	    [total_sale]
    )
)

--Day 11
--Day 12
--Day 13
--Day 14